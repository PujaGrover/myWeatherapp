[{"/Users/jorgevasquez/Desktop/myweatherapp/src/index.js":"1","/Users/jorgevasquez/Desktop/myweatherapp/src/App.js":"2","/Users/jorgevasquez/Desktop/myweatherapp/src/reportWebVitals.js":"3","/Users/jorgevasquez/Desktop/myweatherapp/src/components/Weather.js":"4"},{"size":500,"mtime":1608500387299,"results":"5","hashOfConfig":"6"},{"size":158,"mtime":1609430381745,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1608500387300,"results":"8","hashOfConfig":"6"},{"size":1472,"mtime":1609436111549,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1mk80p5",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/jorgevasquez/Desktop/myweatherapp/src/index.js",[],["20","21"],"/Users/jorgevasquez/Desktop/myweatherapp/src/App.js",[],"/Users/jorgevasquez/Desktop/myweatherapp/src/reportWebVitals.js",[],"/Users/jorgevasquez/Desktop/myweatherapp/src/components/Weather.js",["22"],"import React from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class Weather extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          weather: [],\n          city: ''\n          \n        \n       }\n    }\n\n\n\nhandleChange (event) {\n\n  let city = (event.target.value);\n  \n  console.log(city)\n  }\n  \n\ngetWeather = async (e) => {\n  e.preventDefault();\n  \n  const city = document.getElementById('city').value;\n\n  axios.get(`http://api.weatherapi.com/v1/current.json?key=b61abddeaf714b5bba9210052201012&q=${city}`).then(\n   res => {\n    this.setState ({weather: [res.data] })\n    // console.log(this.state.weather)\n   }\n );\n  if (city === '') {\n   alert(\"City Missing\")\n  }\n \n \n}\n\n\n\nrender (){\n\nreturn(\n\n<div id='all' >\n<br/>\n<br/>\n\n<form id='form' onSubmit={this.getWeather}>\n\n<input\ntype='search' \nplaceholder='City...'\nid='city'\nonChange={this.handleChange}\n/>\n\n<br/>\n<br/>\n\n<Button className=\"btn-primary\" variant='primary' type='submit'>Get Weather</Button>\n\n  <br/>\n  <br/>\n  <h2>{this.state.weather.map(weather => (<div>\n  {weather.location.name}\n  <hr/>\n  {weather.location.country}\n  <hr/>\n  {weather.current.temp_f} <span>°F</span>\n  <hr/>\n  {weather.current.temp_c} <span>°C</span>\n  <hr/>\n  <h2>{weather.current.condition.text}</h2>\n  <img src={weather.current.condition.icon}/>\n\n  </div>))}</h2>\n  </form>\n\n</div>\n\n\n)\n}\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":83,"column":3,"nodeType":"29","endLine":83,"endColumn":46},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]