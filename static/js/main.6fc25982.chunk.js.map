{"version":3,"sources":["components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","getWeather","e","a","preventDefault","city","document","getElementById","value","axios","get","then","res","setState","weather","data","alert","state","event","target","console","log","id","onSubmit","this","type","placeholder","onChange","handleChange","Button","className","variant","map","location","name","country","current","temp_f","temp_c","condition","text","src","icon","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ySAMqBA,G,wDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAmBdC,WApBuB,uCAoBV,WAAOC,GAAP,eAAAC,EAAA,sDACXD,EAAEE,iBAEIC,EAAOC,SAASC,eAAe,QAAQC,MAE7CC,IAAMC,IAAN,0FAA6FL,IAAQM,MACpG,SAAAC,GACC,EAAKC,SAAU,CAACC,QAAS,CAACF,EAAIG,WAInB,KAATV,GACHW,MAAM,gBAZI,2CApBU,sDAEf,EAAKC,MAAQ,CACXH,QAAS,GACTT,KAAM,IAJO,E,yDAYTa,GAEZ,IAAIb,EAAQa,EAAMC,OAAOX,MAEzBY,QAAQC,IAAIhB,K,+BA0Bd,OAEA,sBAAKiB,GAAG,MAAR,UACA,uBACA,uBAEA,uBAAMA,GAAG,OAAOC,SAAUC,KAAKvB,WAA/B,UAEA,uBACAwB,KAAK,SACLC,YAAY,UACZJ,GAAG,OACHK,SAAUH,KAAKI,eAGf,uBACA,uBAEA,cAACC,EAAA,EAAD,CAAQC,UAAU,cAAcC,QAAQ,UAAUN,KAAK,SAAvD,yBAEE,uBACA,uBACA,6BAAKD,KAAKP,MAAMH,QAAQkB,KAAI,SAAAlB,GAAO,OAAK,gCACvCA,EAAQmB,SAASC,KAClB,uBACCpB,EAAQmB,SAASE,QAClB,uBACCrB,EAAQsB,QAAQC,OALuB,IAKf,yCACzB,uBACCvB,EAAQsB,QAAQE,OAPuB,IAOf,yCACzB,uBACA,6BAAKxB,EAAQsB,QAAQG,UAAUC,OAC/B,qBAAKC,IAAK3B,EAAQsB,QAAQG,UAAUG,yB,GA5EDC,IAAMC,YCK5BC,MARf,WACE,OACE,8BACC,cAAC,EAAD,OCMUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASC,eAAe,SAM1BuC,M","file":"static/js/main.6fc25982.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class Weather extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          weather: [],\n          city: ''\n          \n        \n       }\n    }\n\n\n\nhandleChange (event) {\n\n  let city = (event.target.value);\n  \n  console.log(city)\n  }\n  \n\ngetWeather = async (e) => {\n  e.preventDefault();\n  \n  const city = document.getElementById('city').value;\n\n  axios.get(`http://api.weatherapi.com/v1/current.json?key=b61abddeaf714b5bba9210052201012&q=${city}`).then(\n   res => {\n    this.setState ({weather: [res.data] })\n    // console.log(this.state.weather)\n   }\n );\n  if (city === '') {\n   alert(\"City Missing\")\n  }\n \n \n}\n\n\n\nrender (){\n\nreturn(\n\n<div id='all' >\n<br/>\n<br/>\n\n<form id='form' onSubmit={this.getWeather}>\n\n<input\ntype='search' \nplaceholder='City...'\nid='city'\nonChange={this.handleChange}\n/>\n\n<br/>\n<br/>\n\n<Button className=\"btn-primary\" variant='primary' type='submit'>Get Weather</Button>\n\n  <br/>\n  <br/>\n  <h2>{this.state.weather.map(weather => (<div>\n  {weather.location.name}\n  <hr/>\n  {weather.location.country}\n  <hr/>\n  {weather.current.temp_f} <span>°F</span>\n  <hr/>\n  {weather.current.temp_c} <span>°C</span>\n  <hr/>\n  <h2>{weather.current.condition.text}</h2>\n  <img src={weather.current.condition.icon}/>\n\n  </div>))}</h2>\n  </form>\n\n</div>\n\n\n)\n}\n}","import './App.css';\nimport Weather from './components/Weather';\n\nfunction App() {\n  return (\n    <div>\n     <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}